@model IEnumerable<MiProyecto.Models.Usuario>

@{
    ViewData["Title"] = "Listado de Usuarios";
}

@{
    ViewData["Title"] = "Listado de Usuarios";
    var rnd = new Random();
    var dniFiltro = ViewBag.DniFiltro as string ?? "";
    
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1><i class="fas fa-users"></i> @ViewData["Title"]</h1>
    <a asp-action="Create" class="btn btn-success">
        <i class="fas fa-plus-circle"></i> Crear Nuevo Usuario
    </a>
</div>
<div class="card mb-3">
    <div class="card-body p-3">
        <form asp-action="Index" method="get" class="row g-3 align-items-center">
            <div class="col-md-3 col-6">
                <label for="UsuarioSelect" class="form-label mb-0">Filtrar por dni:</label>
                <select id="UsuarioSelect" name="dniFiltro" class="form-select">
                    <option value="">Seleccionar Usuario</option>
                   @if(!String.IsNullOrEmpty(dniFiltro))
                   {
                    <option value="@dniFiltro" selected>@dniFiltro</option>
                   }
             </select>
            </div>
            <div class="col-md-3 col-12">
                <button type="submit" class="btn btn-primary me-2">
                    <i class="bi bi-search"></i> Filtrar
                </button>
                <a asp-action="Index"  class="btn btn-outline-secondary">
                    <i class="bi bi-x-circle"></i> Limpiar
                </a>
            </div>
        </form>
    </div>
</div>

<div class="table-responsive">
    <table class="table table-striped table-hover">
        <thead class="thead-dark">
            <tr>
                <th>@Html.DisplayNameFor(model => model.DNI)</th>
                <th>@Html.DisplayNameFor(model => model.Apellido)</th>
                <th>@Html.DisplayNameFor(model => model.Email)</th>
                <th>@Html.DisplayNameFor(model => model.Avatar)</th>
                <th>@Html.DisplayNameFor(model => model.Rol)</th>
                <th class="text-center">Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.DNI)</td>
                    <td>@Html.DisplayFor(modelItem => item.Apellido)</td>
                    <td>@Html.DisplayFor(modelItem => item.Email)</td>
                    <td>
                        @if(!String.IsNullOrEmpty(item.Avatar)) 
                        {
                            var x = item.Avatar + "?" + rnd.Next();
                            <img width="32" src="@x" class="rounded-circle" />
                        }
                        else 
                        {
                            <span class="text-muted">Sin foto</span>
                        }
                    </td>
                    <td>@Html.DisplayFor(modelItem => item.Rol)</td>
                    <td class="text-center">
                        <div class="btn-group" role="group">
                            <a asp-action="Edit" asp-route-id="@item.IdUsuario" 
                               class="btn btn-sm btn-primary" title="Editar">
                                <i class="fas fa-edit"></i> Editar
                            </a>
                          <form asp-action="Eliminar" method="post" class="d-inline" id="delete-form-@item.IdUsuario">
                                <input type="hidden" name="id" value="@item.IdUsuario" />
                                <button type="button" class="btn btn-sm btn-danger" title="Eliminar"
                                        onclick="confirmDelete(@item.IdUsuario)">
                                    <i class="fas fa-trash-alt"></i> Eliminar
                                </button>
                            </form>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div class="d-flex justify-content-between mt-4">
    <a asp-action="Index" asp-route-pagina="@(ViewBag.PaginaActual - 1)" 
       class="@(ViewBag.PaginaActual <= 1 ? "btn btn-secondary disabled" : "btn btn-secondary")">
        <i class="fas fa-arrow-left"></i> Anterior
    </a>
    
    <div class="pagination">
        @for (int i = 1; i <= ViewBag.TotalPaginas; i++)
        {
            if (i == ViewBag.PaginaActual)
            {
                <span class="btn btn-primary disabled mx-1">@i</span>
            }
            else
            {
                <a asp-action="Index" asp-route-pagina="@i" class="btn btn-secondary mx-1">@i</a>
            }
        }
    </div>
    
    <a asp-action="Index" asp-route-pagina="@(ViewBag.PaginaActual + 1)" 
       class="@(ViewBag.PaginaActual >= ViewBag.TotalPaginas ? "btn btn-secondary disabled" : "btn btn-secondary")">
        Siguiente <i class="fas fa-arrow-right"></i>
    </a>
</div>

@section Scripts {
    <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/js/select2.min.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/css/select2.min.css" rel="stylesheet" />
    
    <script>
       $(document).ready(function() {
            $('#UsuarioSelect').select2({
                ajax: {
                    url: '/Usuario/Buscar/',
                    dataType: 'json',
                    delay: 250,
                    data: function(params) {
                        return { q: params.term };
                    },
                    processResults: function(data) {
                        return {
                            results: data.datos.map(function(item) {
                                return {
                                    id: item.dni,
                                    text: item.dni
                                };
                            })
                        };
                    },
                    cache: true
                },
                placeholder: 'Buscar Usuario por DNI...',
                minimumInputLength: 1
            });

            @if (!string.IsNullOrEmpty(dniFiltro))
            {
                <text>
                $('#UsuarioSelect').append(new Option('@dniFiltro', '@dniFiltro', true, true)).trigger('change');
                </text>
            }
        });
      async function confirmDelete(id) {
            const result = await Swal.fire({
                title: 'Confirmar',
                text: '¿Está seguro que desea eliminar este usuario?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Sí',
                cancelButtonText: 'No'
            });

            if (result.isConfirmed) {
                document.getElementById(`delete-form-${id}`).submit();
            }
        }
    </script>
}