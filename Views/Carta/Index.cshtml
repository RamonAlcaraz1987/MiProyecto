@model IEnumerable<MiProyecto.Models.Carta>
@{
    ViewData["Title"] = "Listado Cartas";

    var rnd = new Random();
    var nombreFiltro = ViewBag.NombreFiltro as string ?? "";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1><i class="fas fa-users"></i> @ViewData["Title"]</h1>
    <a asp-action="Create" asp-route-pagina="@ViewBag.PaginaActual" class="btn btn-success">
        <i class="fas fa-plus-circle"></i> Crear Nueva Carta
    </a>
</div>

<div class="card mb-3">
    <div class="card-body p-3">
        <form asp-action="Index" method="get" class="row g-3 align-items-center">
            <div class="col-md-3 col-6">
                <label for="CartaSelect" class="form-label mb-0">Filtrar por nombre:</label>
                <select id="CartaSelect" name="nombreFiltro" class="form-select">
                    <option value="">Seleccionar carta</option>
                   @if(!String.IsNullOrEmpty(nombreFiltro))
                   {
                    <option value="@nombreFiltro" selected>@nombreFiltro</option>
                   }
             </select>
            </div>
            <div class="col-md-3 col-12">
                <button type="submit" class="btn btn-primary me-2">
                    <i class="bi bi-search"></i> Filtrar
                </button>
                <a asp-action="Index"  class="btn btn-outline-secondary">
                    <i class="bi bi-x-circle"></i> Limpiar
                </a>
            </div>
        </form>
 

<div class="table-responsive">
    <table class="table table-striped table-hover">
        <thead class="thead-dark">
            <tr>
                
                <th>@Html.DisplayNameFor(model => model.Nombre)</th>
                <th>@Html.DisplayNameFor(model => model.IdCategoria)</th>
                <th>@Html.DisplayNameFor(model => model.IdTipo1)</th> 
                <th>@Html.DisplayNameFor(model => model.IdTipo2)</th>
                <th>@Html.DisplayNameFor(model => model.ValorEstimado)</th>
                <th>@Html.DisplayNameFor(model => model.Imagen)</th>
                <th>@Html.DisplayNameFor(model => model.Estado)</th>
                <th class="text-center">Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var carta in Model)
            {
                <tr>
                    <td>@carta.Nombre</td>
                    <td>@carta.Categoria.Nombre</td>
                    <td>@carta.Tipo1.Descripcion</td>
                    <td>@carta.Tipo2?.Descripcion</td>
                    <td>@carta.ValorEstimado</td>
                    <td>@if(!String.IsNullOrEmpty(carta.Imagen))
                        
                         { 
                                var x = carta.Imagen + "?" + rnd.Next();
                                <img width= "100" height="140" src="@x" class="pokemon-card" alt="Carta de Pokemon" />


                          }
                          else{

                                <span class="badge bg-danger">Sin Imagen</span>



                          }</td>
                    <td>
                        @if(carta.Estado == 1)
                        {
                            <span class="badge bg-success">Activa</span>


                        }
                        else{

                            <span class="badge bg-danger">Inactiva</span>

                        }
                        
                    </td>
                    <td class="text-center">
                        <a asp-action="Edit" asp-route-id="@carta.IdCarta" asp-route-pagina="@ViewBag.PaginaActual" class="btn btn-primary">
                            <i class="fas fa-edit"></i> Editar
                        </a>
                        <form asp-action="Delete" method="post" class="d-inline" id="delete-form-@carta.IdCarta">
                            <input type="hidden" name="id" value="@carta.IdCarta" />
                            <input type="hidden" name="pagina" value="@ViewBag.PaginaActual" />
                            <button type="button" class="btn btn-danger" title="Eliminar"
                                    onclick="confirmDelete(@carta.IdCarta)">
                                <i class="fas fa-trash-alt"></i> Eliminar
                            </button>
                        </form>
                        <a asp-action="Detail" asp-route-id="@carta.IdCarta" asp-route-pagina="@ViewBag.PaginaActual" class="btn btn-info">
                            <i class="fas fa-info-circle"></i> Detalles
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div class="d-flex justify-content-between mt-4">
    <a asp-action="Index" asp-route-pagina="@(ViewBag.PaginaActual - 1)" 
       class="@(ViewBag.PaginaActual <= 1 ? "btn btn-secondary disabled" : "btn btn-secondary")">
        <i class="fas fa-arrow-left"></i> Anterior
    </a>
    
    <div class="pagination">
        @for (int i = 1; i <= ViewBag.TotalPaginas; i++)
        {
            if (i == ViewBag.PaginaActual)
            {
                <span class="btn btn-primary disabled mx-1">@i</span>
            }
            else
            {
                <a asp-action="Index" asp-route-pagina="@i" class="btn btn-secondary mx-1">@i</a>
            }
        }
    </div>
    
    
    <a asp-action="Index" asp-route-pagina="@(ViewBag.PaginaActual + 1)" 
       class="@(ViewBag.PaginaActual >= ViewBag.TotalPaginas ? "btn btn-secondary disabled" : "btn btn-secondary")">
        Siguiente <i class="fas fa-arrow-right"></i>
    </a>
</div>

    @section Scripts {
        <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/js/select2.min.js"></script>
        <link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/css/select2.min.css" rel="stylesheet" />

       <script>
        $(document).ready(function() {
            $('#CartaSelect').select2({
                ajax: {
                    url: '/Carta/Buscar/',
                    dataType: 'json',
                    delay: 250,
                    data: function(params) {
                        return { q: params.term };
                    },
                    processResults: function(data) {
                        return {
                            results: data.datos.map(function(item) {
                                return {
                                    id: item.nombre,
                                    text: item.nombre
                                };
                            })
                        };
                    },
                    cache: true
                },
                placeholder: 'Buscar carta por nombre...',
                minimumInputLength: 1
            });

            @if (!string.IsNullOrEmpty(nombreFiltro))
            {
                <text>
                $('#cartaSelect').append(new Option('@nombreFiltro', '@nombreFiltro', true, true)).trigger('change');
                </text>
            }
        });
          async function confirmDelete(id) {
                const result = await Swal.fire({
                    title: 'Confirmar',
                    text: '¿Está seguro que desea eliminar esta carta?',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Sí',
                    cancelButtonText: 'No'
                });
                if (result.isConfirmed) {
                    document.getElementById('delete-form-' + id).submit();
                }
            }
        </script>
    }    

